/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      admSettingsDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

chainRuleSearchDepth        3;
functionHooks               empty;
flowModel
{
    type    piso;
    subStepping
    {
        useSubStepping      yes;
        maxNSteps           50;
        minNSteps           2;
        initialNSteps       10;
    }
    adaptiveTimeSteppingTolerance
    {
        phi     1e-2;
        p       1e-3;
        R       (1e-2 1e-2 1e-2 1e-2 1e-2 1e-2);
    }
    minErrorScale
    {
        phi     1e-6;
        p       1e-6;
        R       (1e-6 1e-6 1e-6 1e-6 1e-6 1e-6);
    }
}
outerLoopMaxIterations      20;
innerLoopMaxIterations      500;
adaptiveTimeStepping
{
    useAdaptiveTimeStepping yes;
    overClockFactor         1;
    maxIncreaseFactor       2;
    maxReductionFactor      0.01;
    minReductionFactor      0.7;
    convergenceFactor       1;
    performanceFeedback
    {
        usePerformanceFeedback  yes;
        measure                 cpuTime;
        bias                    0;
    }
}
outputFlags
{
    overallSummary                  yes; // default = yes
    timeDetails                     no; // default = no
    
    reactionAverages                yes; // default = yes
    reactionSolverPerformance       no; // default = no
    reactionResidualSummary         yes; // default = yes
    reactionResidualDetails         yes; // default = no
    reactionErrorScales             yes; // default = no
    reactionTimestepEstimate        yes; // default = yes

    implicitLoopSummary             yes; // default = no
    implicitLoopDetails             yes; // default = no
    implicitAutoSolvePerformance    yes; // default = no

    functionHooksSummary            yes; // default = no

    flowSolverPerformance           no; // default = no
    flowResiduals                   yes; // default = yes
    flowErrorScales                 yes; // default = no
    flowTimestepEstimate            yes; // default = yes
    flowContinuityErrors            no; // default = yes
}

/*
chainRuleSearchDepth        integer;
functionHooks               functionHooksName;
flowModel
{
    type        flowModelName;
    subStepping
    {
        useSubStepping      yes/no;
        maxNSteps           label;  // default FOAM_LABEL_MAX
        minNSteps           label;  // default 2
        initialNSteps       label;  // must be even, default 2
    }
    adaptiveTimeSteppingTolerance
    {
        phi     scalar;     // if required
        p       scalar;     // if required
        R       symmTensor; // if required
    }
    minErrorScale
    {
        phi     scalar;     // default SMALL
        p       scalar;     // default SMALL
        R       symmTensor; // default SMALL symmtensor
    }
}
outerLoopMaxIterations      integer;
innerLoopMaxIterations      integer;
adaptiveTimeStepping
{
    useAdaptiveTimeStepping yes/no;
    convergenceFactor       scalar; // required if useAdaptiveTimeStepping
    overClockFactor         scalar; // optional - default = 1.0
    maxIncreaseFactor       scalar; // required if useAdaptiveTimeStepping
    maxReductionFactor      scalar; // required if useAdaptiveTimeStepping
    minReductionFactor      scalar; // required if useAdaptiveTimeStepping
    performanceFeedback
    {
        usePerformanceFeedback  yes; //required if useAdaptiveTimeStepping
        measure                 iterations/cpuTime; // required if
        bias                    scalar;             // usePerformanceFeedBack
    }
}
outputFlags
{
    overallSummary                  yes/no; // default = yes
    timeDetails                     yes/no; // default = no
    
    reactionAverages                yes/no; // default = yes
    reactionSolverPerformance       yes/no; // default = no
    reactionResidualSummary         yes/no; // default = yes
    reactionResidualDetails         yes/no; // default = no
    reactionErrorScales             yes/no; // default = no
    reactionTimestepEstimate        yes/no; // default = yes

    implicitLoopSummary             yes/no; // default = no
    implicitLoopDetails             yes/no; // default = no
    implicitAutoSolvePerformance    yes/no; // default = no

    functionHooksSummary            yes/no; // default = no
    ionSolverPerformance            yes/no; // default = no
    gasSolverPerformance            yes/no; // default = yes

    flowSolverPerformance           yes/no; // default = no
    flowResiduals                   yes/no; // default = yes
    flowErrorScales                 yes/no; // default = no
    flowTimestepEstimate            yes/no; // default = yes
    flowContinuityErrors            yes/no; // default = yes
}
*/

// ************************************************************************* //
