/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      admSettingsDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

chainRuleSearchDepth        3;
functionHooks               sh2IonsGas;
flowModel
{
    type    steadyState;
    subStepping
    {
        useSubStepping      no;
    }
}
outerLoopMaxIterations      20;
innerLoopMaxIterations      500;
adaptiveTimeStepping
{
    useAdaptiveTimeStepping yes;
    overClockFactor         1;
    maxIncreaseFactor       1.1;
    maxReductionFactor      0.01;
    minReductionFactor      0.7;
    convergenceFactor       1;
    performanceFeedback
    {
        usePerformanceFeedback  yes;
        measure                 cpuTime;
        bias                    0;
    }
    flowSolutionConvergence
    {
        phi     1e-2;
        p       1e-2;
        R       (1e-2 1e-2 1e-2 1e-2 1e-2 1e-2);
    }
}
outputFlags
{
    overallSummary                  yes; // default = yes
    timeDetails                     no;  // default = no
    
    reactionAverages                yes; // default = yes
    reactionSolverPerformance       no;  // default = no
    reactionResidualSummary         yes; // default = yes
    reactionResidualDetails         no;  // default = no
    reactionErrorScales             no;  // default = no
    reactionTimestepEstimate        yes; // default = yes

    implicitLoopSummary             no;  // default = no
    implicitLoopDetails             no;  // default = no
    implicitAutoSolvePerformance    no;  // default = no

    functionHooksSummary            yes; // default = no
    ionSolverPerformance            no;  // default = no
    gasSolverPerformance            yes; // default = yes

    flowSolverPerformance           no;  // default = no
    flowResiduals                   yes; // default = yes
    flowErrorScales                 no;  // default = no
    flowTimestepEstimate            yes; // default = yes
    flowContinuityErrors            yes; // default = yes
}

/*

Now you need to add the new adaptiveTimestepping sub dictionary, and carry
through the new variable names.

So you are working on adding different behaviours to subStepping, as described
below.  There are three types of adaptive timestepping (ATS)... with reactions,
which is the "base" ATS.  Then the flowModel, i.e. "do we include flow 
variables when calculating ATS?"  Then, substepping that alters its behaviour
based on the ATS... that is: the flow model needs a smaller timestep, therefore
we increase the number of sub-steps.  I need to clarify this relationship.

&&&Now you are adding it through derived flow models.

    | | | | | | | | | |-|-|- - - - - - - - - - - - - - - - 
| | | SUB STEPPING  | |-|-|- - - ADAPTIVE TIMESTEPPING - - - -
| | | | | | | | | | | |-|-|- - - - - - - - - - - - - - - - - -
    | | | | | $ $ $ $ $-$-S-S-S-S-S-S-S- - - - - - - - - -
            S S ADAPTIVE TIMESTEPPING S S
              S S WITH SUB STEPPING S S
                S S S S S S S S S S S

chainRuleSearchDepth        integer;
functionHooks               functionHooksName;
flowModel
{
    type        flowModelName;
    subStepping
    {
        type        off;
        type        fixedNSteps;
            nSteps          label;  // must be even
        type        fixedTimestep;
            maxDeltaT       scalar; // default VGREAT
            minDeltaT       scalar; // default VSMALL
            maxNSteps       label;  // must be even, default FOAM_LABEL_MAX
            minNSteps       label;  // must be even, default 2
        type        adaptiveTimestep;
            maxDeltaT       scalar; // default VGREAT
            minDeltaT       scalar; // default VSMALL
            maxNSteps       label;  // must be even, default FOAM_LABEL_MAX
            minNSteps       label;  // must be even, default 2
            initialNSteps   label;  // must be even, default 2
    }
    adaptiveTimestepping
    {
        enableWithFlowModel     yes/no; // must be yes if req'd by subStepping
        ignore ( phi p R );     // include fields to ignore
        tolerance
        {
            phi     scalar;     // if required
            p       scalar;     // if required
            R       symmTensor; // if required
        }
        minErrorScale
        {
            phi     scalar;     // default SMALL
            p       scalar;     // default SMALL
            R       symmTensor; // default SMALL symmtensor
        }
    }
}
outerLoopMaxIterations      integer;
innerLoopMaxIterations      integer;
adaptiveTimeStepping
{
    useAdaptiveTimeStepping yes/no;
    convergenceFactor       scalar; // required if useAdaptiveTimeStepping
    overClockFactor         scalar; // optional - default = 1.0
    maxIncreaseFactor       scalar; // required if useAdaptiveTimeStepping
    maxReductionFactor      scalar; // required if useAdaptiveTimeStepping
    minReductionFactor      scalar; // required if useAdaptiveTimeStepping
    performanceFeedback
    {
        usePerformanceFeedback  yes; //required if useAdaptiveTimeStepping
        measure                 iterations/cpuTime; // required if
        bias                    scalar;             // usePerformanceFeedBack
    }
}
outputFlags
{
    overallSummary                  yes/no; // default = yes
    timeDetails                     yes/no; // default = no
    
    reactionAverages                yes/no; // default = yes
    reactionSolverPerformance       yes/no; // default = no
    reactionResidualSummary         yes/no; // default = yes
    reactionResidualDetails         yes/no; // default = no
    reactionErrorScales             yes/no; // default = no
    reactionTimestepEstimate        yes/no; // default = yes

    implicitLoopSummary             yes/no; // default = no
    implicitLoopDetails             yes/no; // default = no
    implicitAutoSolvePerformance    yes/no; // default = no

    functionHooksSummary            yes/no; // default = no
    ionSolverPerformance            yes/no; // default = no
    gasSolverPerformance            yes/no; // default = yes

    flowSolverPerformance           yes/no; // default = no
    flowResiduals                   yes/no; // default = yes
    flowErrorScales                 yes/no; // default = no
    flowTimestepEstimate            yes/no; // default = yes
    flowContinuityErrors            yes/no; // default = yes
}
*/

// ************************************************************************* //
